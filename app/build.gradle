apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion android_compile_sdk_version
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.android.moviefinder"
        minSdkVersion 21
        targetSdkVersion android_target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://developers.themoviedb.org\"")
        }
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField("String", "BASE_URL", "\"https://developers.themoviedb.org\"")
        }
    }

    buildFeatures {
        dataBinding = true
    }

    kapt {
        generateStubs = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')

    implementation fileTree(dir: "libs", include: ["*.jar"])

    // dagger
    implementation "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    // ????
    implementation "com.google.dagger:dagger-android:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    // javax annotation
    compileOnly "javax.annotation:jsr250-api:$javax_annotation_version"

    // retrofit
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"

    // logging interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // androidx
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"

    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    testCompileOnly "javax.annotation:jsr250-api:$javax_annotation_version"
    testImplementation "com.google.dagger:dagger:$dagger_version"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    androidTestCompileOnly "javax.annotation:jsr250-api:$javax_annotation_version"
    androidTestImplementation "com.google.dagger:dagger:$dagger_version"
}